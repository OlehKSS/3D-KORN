#include "tdk_database.h"

std::vector<TDK_Edit*> TDK_Database::mv_EditHistoryVector ;

unsigned int TDK_Database::mv_NumberOfAutogeneratedPointClouds = 0;
std::vector<QString> TDK_Database::mv_PointCloudsName;
std::vector<pcl::PointCloud<pcl::PointXYZRGB>::Ptr> TDK_Database::mv_PointCloudsVector;
std::vector<float> TDK_Database::mv_PointCloudsRotation;

unsigned int TDK_Database::mv_NumberOfAutogeneratedRegisteredPointClouds = 0;
std::vector<QString> TDK_Database::mv_RegisteredPointCloudsName;
std::vector<pcl::PointCloud<pcl::PointXYZRGB>::Ptr> TDK_Database::mv_RegisteredPointCloudsVector;

unsigned int TDK_Database::mv_NumberOfAutogeneratedMeshes = 0;
std::vector<QString> TDK_Database::mv_MeshesName;
std::vector<pcl::PolygonMesh::Ptr> TDK_Database::mv_MeshesVector;

TDK_Database::TDK_Database(QObject *parent) : QObject(parent)
{

}

TDK_Database::~TDK_Database()
{

}

void TDK_Database::mf_StaticAddPointCloud(pcl::PointCloud<pcl::PointXYZRGB>::Ptr pointCloudPtr, unsigned int rotationAngle, QString pointCloudName)
{
    mv_PointCloudsVector[mv_PointCloudsVector.size()] = pointCloudPtr;
    if("U1425_AUTOGENERATE" == pointCloudName){
        mv_NumberOfAutogeneratedPointClouds++;
        mv_PointCloudsName[mv_PointCloudsName.size()] = "TDK_PointCloud"+ mv_NumberOfAutogeneratedPointClouds;
    }
    else{
        mv_PointCloudsName[mv_PointCloudsName.size()] = pointCloudName;
    }
    mv_PointCloudsRotation[mv_PointCloudsRotation.size()] = rotationAngle;
}

void TDK_Database::mf_StaticAddRegisteredPointCloud(pcl::PointCloud<pcl::PointXYZRGB>::Ptr registeredPointCloudPtr, QString registeredPointCloudName)
{
    mv_RegisteredPointCloudsVector[mv_RegisteredPointCloudsVector.size()] = registeredPointCloudPtr;
    if("U1425_AUTOGENERATE" == registeredPointCloudName){
        mv_NumberOfAutogeneratedRegisteredPointClouds++;
        mv_RegisteredPointCloudsName[mv_RegisteredPointCloudsName.size()] = "TDK_RegisteredPointCloud"+ mv_NumberOfAutogeneratedRegisteredPointClouds;
    }
    else{
        mv_RegisteredPointCloudsName[mv_RegisteredPointCloudsName.size()] = registeredPointCloudName;
    }
}

void TDK_Database::mf_StaticAddMesh(pcl::PolygonMesh::Ptr meshPtr, QString meshName)
{
    mv_MeshesVector[mv_MeshesVector.size()] = meshPtr;
    if("U1425_AUTOGENERATE" == meshName){
        mv_NumberOfAutogeneratedMeshes++;
        mv_MeshesName[mv_MeshesName.size()] = "TDK_Mesh"+ mv_NumberOfAutogeneratedMeshes;
    }
    else{
        mv_MeshesName[mv_PointCloudsName.size()] = meshName;
    }
}
